import type { Metadata } from "next";
import { Playfair_Display, Inter, Manrope, Oswald } from "next/font/google";
import { structuredData } from "@/data/structuredData";
import "./globals.css";

const playfair = Playfair_Display({
  subsets: ["latin", "cyrillic"],
  variable: "--font-playfair",
  display: "swap",
});

const inter = Inter({
  subsets: ["latin", "cyrillic"],
  variable: "--font-inter",
  display: "swap",
});

const manrope = Manrope({
  subsets: ["latin", "cyrillic"],
  variable: "--font-manrope",
  display: "swap",
});

const oswald = Oswald({
  subsets: ["latin", "cyrillic"],
  variable: "--font-oswald",
  display: "swap",
});

export const metadata: Metadata = {
  title: {
    default: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å –∏ —Å–∞—É–Ω –ø–æ–¥ –∫–ª—é—á –∑–∞ 30 –¥–Ω–µ–π",
    template: "%s | –ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è",
  },
  description:
    "‚≠ê –°—Ç—Ä–æ–∏–º –±–∞–Ω–∏ –∏ —Å–∞—É–Ω—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ –†–æ—Å—Å–∏–∏ –∑–∞ 30 –¥–Ω–µ–π —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π 3 –≥–æ–¥–∞. ‚úÖ –†—É—Å—Å–∫–∏–µ –±–∞–Ω–∏, —Ñ–∏–Ω—Å–∫–∏–µ —Å–∞—É–Ω—ã, —Ö–∞–º–∞–º—ã, –±–∞–Ω–∏-–±–æ—á–∫–∏ –ø–æ–¥ –∫–ª—é—á. üìû –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏.",
  keywords: [
    "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å",
    "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Å–∞—É–Ω",
    "–±–∞–Ω—è –ø–æ–¥ –∫–ª—é—á",
    "—Å–∞—É–Ω–∞ –ø–æ–¥ –∫–ª—é—á",
    "—Ä—É—Å—Å–∫–∞—è –±–∞–Ω—è",
    "—Ñ–∏–Ω—Å–∫–∞—è —Å–∞—É–Ω–∞",
    "—Ç—É—Ä–µ—Ü–∫–∏–π —Ö–∞–º–∞–º",
    "–±–∞–Ω—è –±–æ—á–∫–∞",
    "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å —Å–ø–±",
    "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å –ª–µ–Ω–æ–±–ª–∞—Å—Ç—å",
    "–±–∞–Ω—è –∏–∑ –±—Ä—É—Å–∞",
    "–±–∞–Ω—è –∏–∑ –±—Ä–µ–≤–Ω–∞",
    "–ø—Ä–æ–µ–∫—Ç—ã –±–∞–Ω—å",
  ],
  authors: [{ name: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è" }],
  creator: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è",
  publisher: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è",
  formatDetection: {
    email: false,
    address: false,
    telephone: false,
  },
  metadataBase: new URL(
    process.env.NEXT_PUBLIC_SITE_URL || "https://–±—ã—Å—Ç—Ä–∞—è-–±–∞–Ω—è.—Ä—Ñ"
  ),
  alternates: {
    canonical: "/",
  },
  openGraph: {
    title: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å –∏ —Å–∞—É–Ω –ø–æ–¥ –∫–ª—é—á –∑–∞ 30 –¥–Ω–µ–π",
    description:
      "–°—Ç—Ä–æ–∏–º –±–∞–Ω–∏ –∏ —Å–∞—É–Ω—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ –†–æ—Å—Å–∏–∏ –∑–∞ 30 –¥–Ω–µ–π —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π 3 –≥–æ–¥–∞. –†—É—Å—Å–∫–∏–µ –±–∞–Ω–∏, —Ñ–∏–Ω—Å–∫–∏–µ —Å–∞—É–Ω—ã, —Ö–∞–º–∞–º—ã –ø–æ–¥ –∫–ª—é—á.",
    url: "/",
    siteName: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è",
    images: [
      {
        url: "/hero-bg.jpg",
        width: 1200,
        height: 630,
        alt: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å –∏ —Å–∞—É–Ω - –ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è",
      },
    ],
    locale: "ru_RU",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "–ë—ã—Å—Ç—Ä–∞—è –ë–∞–Ω—è - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –±–∞–Ω—å –∏ —Å–∞—É–Ω –ø–æ–¥ –∫–ª—é—á",
    description:
      "–°—Ç—Ä–æ–∏–º –±–∞–Ω–∏ –∏ —Å–∞—É–Ω—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞ 30 –¥–Ω–µ–π —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π 3 –≥–æ–¥–∞",
    images: ["/hero-bg.jpg"],
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      "max-video-preview": -1,
      "max-image-preview": "large",
      "max-snippet": -1,
    },
  },
  icons: {
    icon: [
      { url: "/favicon.svg", type: "image/svg+xml" },
      { url: "/favicon.ico", sizes: "32x32" },
    ],
    shortcut: "/favicon.svg",
    apple: [{ url: "/apple-icon.png", sizes: "180x180" }],
  },
  manifest: "/site.webmanifest",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ru">
      <head>
        <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{
            __html: JSON.stringify([
              structuredData.organization,
              structuredData.localBusiness,
              structuredData.services,
              structuredData.website,
              structuredData.webpage,
              structuredData.faq,
            ]),
          }}
        />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="anonymous"
        />
        <link rel="dns-prefetch" href="https://fonts.googleapis.com" />
        <link rel="dns-prefetch" href="https://fonts.gstatic.com" />
        <link rel="preload" href="/hero-bg.jpg" as="image" type="image/jpeg" />
        <meta name="theme-color" content="#8B4513" />
        <meta name="msapplication-TileColor" content="#8B4513" />
        <meta
          name="format-detection"
          content="telephone=no, date=no, email=no, address=no"
        />
      </head>
      <body
        className={`${playfair.variable} ${inter.variable} ${manrope.variable} ${oswald.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
